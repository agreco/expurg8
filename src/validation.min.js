define("validation.MinMax",{alias:"minmax",hasMany:!1,max:1,min:0,coerce:function(t){return this.prune(t.map(this.type.coerce,this.type))},valid:function(t){return this.hasMany?is_arr(t)&&t.length>=this.min&&t.length<=this.max:!is_arr(t)||lib.is(this.type,Name+".type.Array")&&!lib.is(this.type,Name+".type.String")},init:function(){this.max=this.max>>>0,this.min=this.min>>>0,this.hasMany=this.max>1},prune:function(t){return t.length>this.max&&(t.length=this.max),t},test:function(){return is_num(this.max)&&is_num(this.min)&&this.max>=this.min&&this.min>=0}});
define("validation.MinMax",{alias:"minmax",hasMany:!1,max:1,min:0,coerce:function(t){return this.prune((is_arr(t)?t:[t]).map(this.type.coerce,this.type))},valid:function(t){return this.hasMany?is_arr(t)&&t.length>=this.min&&t.length<=this.max:!(this.type instanceof __lib__.type.Array||is_arr(t))},init:function(){this.hasMany=this.min>1&&this.max>this.min},prune:function(t){return t.length>this.max&&(t.length=this.max),t},test:function(){return is_num(this.max)&&is_num(this.min)&&this.max>=this.min&&this.min>=0}});